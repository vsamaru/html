!function(t){var e={};function n(r){if(e[r])return e[r].exports;var a=e[r]={i:r,l:!1,exports:{}};return t[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)n.d(r,a,function(e){return t[e]}.bind(null,a));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e){addEventListener("fetch",t=>{t.respondWith(async function(t){var e=new URL(t.url);if((c=e.pathname.split("/"))[1]){var n="";c.length>1?(c.shift(),n=c.join("/")):n=c[1];var r=await LINKS.get(n);if(r){var a=new URL(r);return Response.redirect(a.toString(),301)}return new Response(JSON.stringify({Status:404,Message:"Short url not found",ShortUrl:null}),{status:404,statusText:"Not found",headers:{"Content-Type":"application/json"}})}if(!e.searchParams.get("new")){var o=await fetch("https://raw.githubusercontent.com/vsamaru/html/main/index.html",{cf:{cacheTtl:600,cacheKey:t.url}});return new Response(o.body,{headers:{"Content-Type":"text/html"}})}try{var s=new URL(e.searchParams.get("new")),i=await fetch(new Request("https://csprng.xyz/v1/api?length=6"));await i.json();try{var u=await async function t(e){void 0===e&&(e=0);if(e>=5)throw new Error("Limiting random key checks to 5");try{var n=await fetch(new Request("https://csprng.xyz/v1/api?length=6")),r=(await n.json()).Data;if(await LINKS.get(r))throw new Error("Collision!");return r}catch(n){return e++,await t(e)}}()}catch(t){return new Response(JSON.stringify({Status:500,Message:t.message,ShortUrl:null}),{status:500,statusText:"Server error",headers:{"Content-Type":"application/json"}})}await LINKS.put(u,s.toString());var c=e.protocol+"//"+e.hostname+"/"+u;return new Response(JSON.stringify({Status:200,Message:"Successfully created new link",ShortUrl:c}),{headers:{"Content-Type":"application/json"}})}catch(t){return new Response(JSON.stringify({Status:400,Message:t.message,ShortUrl:null}),{status:400,statusText:"Bad Request",headers:{"Content-Type":"application/json"}})}}(t.request))})}]);